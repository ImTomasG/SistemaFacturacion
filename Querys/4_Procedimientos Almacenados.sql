GO
USE DB_FACTURACION
GO
--***

IF EXISTS (SELECT * FROM sys.objects WHERE TYPE = 'p' AND name = 'SP_BUSCAR_CONTADOR')
DROP PROCEDURE SP_BUSCAR_CONTADOR
GO
IF EXISTS (SELECT * FROM sys.objects WHERE TYPE = 'p' AND name = 'SP_CREDENCIALES')
DROP PROCEDURE SP_CREDENCIALES
GO
IF EXISTS (SELECT * FROM sys.objects WHERE TYPE = 'p' AND name = 'SP_FACTURACION')
DROP PROCEDURE SP_FACTURACION
GO

CREATE PROC SP_CREDENCIALES(
@EMAIL VARCHAR(50),
@PASSWORD VARCHAR(50)
)AS
BEGIN
SELECT P.DPI, P.PRIMER_NOMBRE, P.SEGUNDO_NOMBRE, P.TERCER_NOMBRE, P.PRIMER_APELLIDO, P.SEGUNDO_APELLIDO, P.TERCER_APELLIDO, P.TELEFONO, P.DIRECCION_RESIDENCIA, P.EMAIL, P.PASSWORD, R.NOMBRE_ROL
FROM PERSONAS P
JOIN ROLES R ON P.ID_ROL = R.ID_ROL
WHERE P.EMAIL = @EMAIL AND P.PASSWORD = @PASSWORD
END
GO

CREATE PROC SP_BUSCAR_CONTADOR(
@IDCONTADOR INTEGER
)AS
BEGIN
SELECT P.DPI, CONCAT(P.PRIMER_NOMBRE,' ', P.SEGUNDO_NOMBRE,' ', P.TERCER_NOMBRE) AS NOMBRES, CONCAT(P.PRIMER_APELLIDO, ' ', P.SEGUNDO_APELLIDO,' ', P.TERCER_APELLIDO) AS APELLIDOS, P.TELEFONO, P.EMAIL, C.ID_CONTADOR, TC.NOMBRE_TIPO_CONTADOR, TT.TIPO_TARIFA, C.DIRECCION_DESTINO, M.NOMBRE_MUNICIPIO, D.NOMBRE_DEPARTAMENTO
FROM PERSONAS P
JOIN CONTADOR C ON P.DPI = C.DPI
JOIN TIPO_CONTADOR TC ON C.ID_TIPO_CONTADOR = TC.ID_TIPO_CONTADOR
JOIN TIPO_TARIFAS TT ON C.ID_TARIFA = TT.ID_TARIFA
JOIN MUNICIPIOS M ON C.ID_MUNICIPIO = M.ID_MUNICIPIO AND C.ID_DEPARTAMENTO = M.ID_DEPARTAMENTO
JOIN DEPARTAMENTOS D ON M.ID_DEPARTAMENTO = D.ID_DEPARTAMENTO
WHERE C.ID_CONTADOR = @IDCONTADOR
END
GO



CREATE PROC SP_FACTURACION(
--INPUT QUE ALMACENA EL ID DEL CONTADOR QUE INGRESA EL ELECTRICISTA
@ID_CONTADOR INT,
--INPUT QUE ALMACENA LA LECTURA ACTUAL QUE TOMA EL ELECTRICISTA
@LECTURA_ACTUAL NUMERIC(10,4)
)
AS
--DECLARACION DE VARIABLE DPI
DECLARE @DPI INT
--DECLARACION DE VARIABLE CONSUMO_FINAL
DECLARE @CONSUMO_FINAL INT
--DECLARACION DE VARIABLE LECTURA DEL MES ANTERIOR
DECLARE @LECTURA_ANTERIOR INT
--DECLARACION DE VARIABLE EN LA QUE SE GENERA LA FACTURA
DECLARE @FECHA_REGISTRO DATETIME
--DECLARACION DE VARIABLE PRECIO PARCIAL
DECLARE @PRECIO_PARCIAL NUMERIC (10,2)
--DECLARACION DE VARIABLE PRECIO TOTAL
DECLARE @PRECIO_TOTAL NUMERIC (10,2)
--DECLARACION DE VARIABLE QUE VERIFICA SI EL CONTADOR EXISTE
DECLARE @CONTADOR INT

--VERIFICAR SI EL CONTADOR INGRESADO POR EL ELECTRICISTA EXISTE
SELECT @CONTADOR = COUNT(C.ID_CONTADOR) FROM CONTADOR C WHERE C.ID_CONTADOR = @ID_CONTADOR

IF(@CONTADOR >0)
	BEGIN
		--ALMACENA EN LAS VARIABLES EL: DPI, CONSUMO_FINAL, FECHA_REGISTRO, PRECIO PARCIAL Y PRECIO TOTAL
		SELECT TOP 1 @DPI = P.DPI, @LECTURA_ANTERIOR = HM.LECTURA_ACTUAL, @CONSUMO_FINAL = (@LECTURA_ACTUAL-HM.LECTURA_ACTUAL), @FECHA_REGISTRO = HM.FECHA_REGISTRO, @PRECIO_PARCIAL = (@LECTURA_ACTUAL-HM.LECTURA_ACTUAL)*TT.PRECIO,@PRECIO_TOTAL = ((@LECTURA_ACTUAL-HM.LECTURA_ACTUAL)*TT.PRECIO) + M.ALUMBRADO_PUBLICO
		FROM HISTORIAL_MENSUAL HM
		JOIN CONTADOR C ON HM.ID_CONTADOR = C.ID_CONTADOR
		JOIN MUNICIPIOS M ON C.ID_MUNICIPIO = M.ID_MUNICIPIO AND C.ID_DEPARTAMENTO = M.ID_DEPARTAMENTO
		JOIN TIPO_TARIFAS TT ON C.ID_TARIFA = TT.ID_TARIFA
		JOIN PERSONAS P ON C.DPI = P.DPI
		WHERE HM.ID_CONTADOR = @ID_CONTADOR
		ORDER BY HM.FECHA_REGISTRO DESC;
		
		--INGRESO DE LOS DATOS A LA TABLA "HISTORIAL_MENSUAL"
		INSERT INTO HISTORIAL_MENSUAL (ID_CONTADOR, LECTURA_ACTUAL) VALUES(@ID_CONTADOR, @LECTURA_ACTUAL);
		-- INGRESO DE LA DATA A TABLA "FACTURACION"
		INSERT INTO FACTURA(DPI, ID_CONTADOR, CONSUMO_FINAL, FECHA_REGISTRO, PRECIO)VALUES(@DPI, @ID_CONTADOR, @CONSUMO_FINAL, @FECHA_REGISTRO, @PRECIO_TOTAL);

		--SELECT QUE DEVUELVE LOS DATOS NECESARIOS PARA LA FACTURA
		SELECT TOP 1 F.DPI, CONCAT(P.PRIMER_NOMBRE,' ',P.SEGUNDO_NOMBRE,' ',P.TERCER_NOMBRE) AS NOMBRES, CONCAT(P.PRIMER_APELLIDO,' ',P.SEGUNDO_APELLIDO,' ',P.TERCER_APELLIDO)AS APELLIDOS, P.TELEFONO, P.EMAIL, D.NOMBRE_DEPARTAMENTO, M.NOMBRE_MUNICIPIO, F.ID_CONTADOR, C.DIRECCION_DESTINO, TC.NOMBRE_TIPO_CONTADOR, F.ID_FACTURA, CONVERT(varchar,F.FECHA_GENERACION,22) as FECHA_GENERACION, TT.TIPO_TARIFA, TT.PRECIO AS TOTAL_TARIFA, @LECTURA_ACTUAL AS LECTURA_ACTUAL, @LECTURA_ANTERIOR AS LECTURA_ANTERIOR, F.CONSUMO_FINAL, @PRECIO_PARCIAL AS PRECIO_PARCIAL, M.ALUMBRADO_PUBLICO, F.PRECIO AS PRECIO_TOTAL
		FROM PERSONAS P
		JOIN FACTURA F ON P.DPI = F.DPI
		JOIN HISTORIAL_MENSUAL HM ON F.ID_CONTADOR = HM.ID_CONTADOR AND F.FECHA_REGISTRO = HM.FECHA_REGISTRO
		JOIN CONTADOR C ON HM.ID_CONTADOR = C.ID_CONTADOR
		JOIN TIPO_CONTADOR TC ON C.ID_TIPO_CONTADOR = TC.ID_TIPO_CONTADOR
		JOIN TIPO_TARIFAS TT ON C.ID_TARIFA = TT.ID_TARIFA
		JOIN MUNICIPIOS M ON C.ID_MUNICIPIO = M.ID_MUNICIPIO AND C.ID_DEPARTAMENTO = M.ID_DEPARTAMENTO
		JOIN DEPARTAMENTOS D ON M.ID_DEPARTAMENTO = D.ID_DEPARTAMENTO
		WHERE F.ID_CONTADOR = @ID_CONTADOR
		ORDER BY F.ID_FACTURA DESC;

	END
ELSE
	BEGIN
		SELECT '0' AS ID_CONTADOR, 'El  id del contador no existe, por favor inténtelo nuevamente.' AS MENSAJE_ERROR;
	END
GO